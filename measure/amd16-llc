#!/bin/sh
# Give for each node :
# - the amount of unhalted cpu clock                       (UCLK)
# - the amount of retired instruction                      (RINT)
# - the amount of L3 cache request (including cancelled)   (REQ3)
# - the amount of L3 cache miss                            (MIS3)
#
# Can be used to obtain cache miss ratio :
#
#   RATIO = MIS3 * 100 / REQ3
#
# Can be used to obtain the L3 bandwidth :
#
#   BW = REQ3 * 64 * freq / UCLK
#
# => BW   is the L3 bandwith of the node in byte/second
# => freq is the cpu frequency in clock/second


if xl info >/dev/null 2>/dev/null ; then
    cores=2,8,14,20,26,32,38,44
    swap="qw( 0  1  2  3  4  5  6  7
              8  9 10 11 12 13 14 15
             16 17 18 19 20 21 22 23
             24 25 26 27 28 29 30 31)"
else
    cores=8,32,11,35,10,34,9,33
    prehook="modprobe msr"
    posthook="rmmod msr"
    swap="qw( 0  4  3  7  2  6  1  5
              8 12 11 15 10 14  9 13
             16 20 19 23 18 22 17 21
             24 28 27 31 26 30 25 29)"
fi

case "$1" in
    pre)
        $prehook
	;;
    run)
	exec 1> "$LOGDIR/raw.dat"
	exec rwmsr --core=$cores \
	      0xc0010000=0x000430076@0-1000  \
	      0xc0010001=0x0004300c0@0-1000  \
	      0xc0010002=0x40043f7e0@0-1000  \
	      0xc0010003=0x40043f7e1@0-1000  \
	      \
	      :0xc0010004=0@0-1000 \
	      :0xc0010005=0@0-1000 \
	      :0xc0010006=0@0-1000 \
	      :0xc0010007=0@0-1000
	;;
    post)
        $posthook
	perl -wlan               -e "
	    BEGIN {
                @swap = $swap; " -e '
	        printf("time");
                foreach $node (0..7) { printf(" 000430076-%d", $node); }
                foreach $node (0..7) { printf(" 0004300c0-%d", $node); }
                foreach $node (0..7) { printf(" 40043f7e0-%d", $node); }
                foreach $node (0..7) { printf(" 40043f7e1-%d", $node); }
                printf("\n");
            }

            if ($. <= 2 ) {
                next;
            }

            printf("%s ", shift(@F));
            @F = map { $F[$_] } @swap;
            printf("%s\n", join(" ", @F));

	' "$LOGDIR/raw.dat" > "$LOGDIR/msr.dat"
	rm "$LOGDIR/raw.dat"
	;;
    *)
	exit 1
	;;
esac
